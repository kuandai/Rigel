#include <Rigel/input/keys.h>
#include <GLFW/glfw3.h>

namespace Rigel {

// GLFW key names array, indexed by keycode
const char* glfw_key_names[349] = {
    [0] = "",
    [1] = "",
    [2] = "",
    [3] = "",
    [4] = "",
    [5] = "",
    [6] = "",
    [7] = "",
    [8] = "",
    [9] = "",
    [10] = "",
    [11] = "",
    [12] = "",
    [13] = "",
    [14] = "",
    [15] = "",
    [16] = "",
    [17] = "",
    [18] = "",
    [19] = "",
    [20] = "",
    [21] = "",
    [22] = "",
    [23] = "",
    [24] = "",
    [25] = "",
    [26] = "",
    [27] = "",
    [28] = "",
    [29] = "",
    [30] = "",
    [31] = "",
    [32] = "SPACE",
    [33] = "",
    [34] = "",
    [35] = "",
    [36] = "",
    [37] = "",
    [38] = "",
    [39] = "APOSTROPHE",
    [40] = "",
    [41] = "",
    [42] = "",
    [43] = "",
    [44] = "COMMA",
    [45] = "MINUS",
    [46] = "PERIOD",
    [47] = "SLASH",
    [48] = "0",
    [49] = "1",
    [50] = "2",
    [51] = "3",
    [52] = "4",
    [53] = "5",
    [54] = "6",
    [55] = "7",
    [56] = "8",
    [57] = "9",
    [58] = "",
    [59] = "SEMICOLON",
    [60] = "",
    [61] = "EQUAL",
    [62] = "",
    [63] = "",
    [64] = "",
    [65] = "A",
    [66] = "B",
    [67] = "C",
    [68] = "D",
    [69] = "E",
    [70] = "F",
    [71] = "G",
    [72] = "H",
    [73] = "I",
    [74] = "J",
    [75] = "K",
    [76] = "L",
    [77] = "M",
    [78] = "N",
    [79] = "O",
    [80] = "P",
    [81] = "Q",
    [82] = "R",
    [83] = "S",
    [84] = "T",
    [85] = "U",
    [86] = "V",
    [87] = "W",
    [88] = "X",
    [89] = "Y",
    [90] = "Z",
    [91] = "LEFT_BRACKET",
    [92] = "BACKSLASH",
    [93] = "RIGHT_BRACKET",
    [94] = "",
    [95] = "",
    [96] = "GRAVE_ACCENT",
    [97] = "",
    [98] = "",
    [99] = "",
    [100] = "",
    [101] = "",
    [102] = "",
    [103] = "",
    [104] = "",
    [105] = "",
    [106] = "",
    [107] = "",
    [108] = "",
    [109] = "",
    [110] = "",
    [111] = "",
    [112] = "",
    [113] = "",
    [114] = "",
    [115] = "",
    [116] = "",
    [117] = "",
    [118] = "",
    [119] = "",
    [120] = "",
    [121] = "",
    [122] = "",
    [123] = "",
    [124] = "",
    [125] = "",
    [126] = "",
    [127] = "",
    [128] = "",
    [129] = "",
    [130] = "",
    [131] = "",
    [132] = "",
    [133] = "",
    [134] = "",
    [135] = "",
    [136] = "",
    [137] = "",
    [138] = "",
    [139] = "",
    [140] = "",
    [141] = "",
    [142] = "",
    [143] = "",
    [144] = "",
    [145] = "",
    [146] = "",
    [147] = "",
    [148] = "",
    [149] = "",
    [150] = "",
    [151] = "",
    [152] = "",
    [153] = "",
    [154] = "",
    [155] = "",
    [156] = "",
    [157] = "",
    [158] = "",
    [159] = "",
    [160] = "",
    [161] = "WORLD_1",
    [162] = "WORLD_2",
    [163] = "",
    [164] = "",
    [165] = "",
    [166] = "",
    [167] = "",
    [168] = "",
    [169] = "",
    [170] = "",
    [171] = "",
    [172] = "",
    [173] = "",
    [174] = "",
    [175] = "",
    [176] = "",
    [177] = "",
    [178] = "",
    [179] = "",
    [180] = "",
    [181] = "",
    [182] = "",
    [183] = "",
    [184] = "",
    [185] = "",
    [186] = "",
    [187] = "",
    [188] = "",
    [189] = "",
    [190] = "",
    [191] = "",
    [192] = "",
    [193] = "",
    [194] = "",
    [195] = "",
    [196] = "",
    [197] = "",
    [198] = "",
    [199] = "",
    [200] = "",
    [201] = "",
    [202] = "",
    [203] = "",
    [204] = "",
    [205] = "",
    [206] = "",
    [207] = "",
    [208] = "",
    [209] = "",
    [210] = "",
    [211] = "",
    [212] = "",
    [213] = "",
    [214] = "",
    [215] = "",
    [216] = "",
    [217] = "",
    [218] = "",
    [219] = "",
    [220] = "",
    [221] = "",
    [222] = "",
    [223] = "",
    [224] = "",
    [225] = "",
    [226] = "",
    [227] = "",
    [228] = "",
    [229] = "",
    [230] = "",
    [231] = "",
    [232] = "",
    [233] = "",
    [234] = "",
    [235] = "",
    [236] = "",
    [237] = "",
    [238] = "",
    [239] = "",
    [240] = "",
    [241] = "",
    [242] = "",
    [243] = "",
    [244] = "",
    [245] = "",
    [246] = "",
    [247] = "",
    [248] = "",
    [249] = "",
    [250] = "",
    [251] = "",
    [252] = "",
    [253] = "",
    [254] = "",
    [255] = "",
    [256] = "ESCAPE",
    [257] = "ENTER",
    [258] = "TAB",
    [259] = "BACKSPACE",
    [260] = "INSERT",
    [261] = "DELETE",
    [262] = "RIGHT",
    [263] = "LEFT",
    [264] = "DOWN",
    [265] = "UP",
    [266] = "PAGE_UP",
    [267] = "PAGE_DOWN",
    [268] = "HOME",
    [269] = "END",
    [270] = "",
    [271] = "",
    [272] = "",
    [273] = "",
    [274] = "",
    [275] = "",
    [276] = "",
    [277] = "",
    [278] = "",
    [279] = "",
    [280] = "CAPS_LOCK",
    [281] = "SCROLL_LOCK",
    [282] = "NUM_LOCK",
    [283] = "PRINT_SCREEN",
    [284] = "PAUSE",
    [285] = "",
    [286] = "",
    [287] = "",
    [288] = "",
    [289] = "",
    [290] = "F1",
    [291] = "F2",
    [292] = "F3",
    [293] = "F4",
    [294] = "F5",
    [295] = "F6",
    [296] = "F7",
    [297] = "F8",
    [298] = "F9",
    [299] = "F10",
    [300] = "F11",
    [301] = "F12",
    [302] = "F13",
    [303] = "F14",
    [304] = "F15",
    [305] = "F16",
    [306] = "F17",
    [307] = "F18",
    [308] = "F19",
    [309] = "F20",
    [310] = "F21",
    [311] = "F22",
    [312] = "F23",
    [313] = "F24",
    [314] = "F25",
    [315] = "",
    [316] = "",
    [317] = "",
    [318] = "",
    [319] = "",
    [320] = "KP_0",
    [321] = "KP_1",
    [322] = "KP_2",
    [323] = "KP_3",
    [324] = "KP_4",
    [325] = "KP_5",
    [326] = "KP_6",
    [327] = "KP_7",
    [328] = "KP_8",
    [329] = "KP_9",
    [330] = "KP_DECIMAL",
    [331] = "KP_DIVIDE",
    [332] = "KP_MULTIPLY",
    [333] = "KP_SUBTRACT",
    [334] = "KP_ADD",
    [335] = "KP_ENTER",
    [336] = "KP_EQUAL",
    [337] = "",
    [338] = "",
    [339] = "",
    [340] = "LEFT_SHIFT",
    [341] = "LEFT_CONTROL",
    [342] = "LEFT_ALT",
    [343] = "LEFT_SUPER",
    [344] = "RIGHT_SHIFT",
    [345] = "RIGHT_CONTROL",
    [346] = "RIGHT_ALT",
    [347] = "RIGHT_SUPER",
    [348] = "MENU",
};

char* getKeyName(int keycode) {
    if (keycode < 0 || keycode > GLFW_KEY_LAST) {
        return "";
    }

    return const_cast<char*>(glfw_key_names[keycode]);
}

} // namespace Rigel